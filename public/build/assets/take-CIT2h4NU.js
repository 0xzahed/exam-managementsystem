class l{constructor(){this.examConfig=window.examConfig,this.timer=null,this.autoSaveTimer=null,this.answers={},this.timeRemaining=0,this.hasUnsavedChanges=!1,this.isSubmitting=!1,this.init()}init(){this.calculateTimeRemaining(),this.startTimer(),this.startServerSync(),this.startAutoSave(),this.bindEvents(),this.loadExistingAnswers(),this.setupNavigationWarning()}calculateTimeRemaining(){const e=new Date(this.examConfig.startTime),s=Math.floor((new Date-e)/1e3);this.timeRemaining=Math.max(0,this.examConfig.durationMinutes*60-s)}startTimer(){this.updateTimerDisplay(),this.timer=setInterval(()=>{this.timeRemaining--,this.updateTimerDisplay(),this.timeRemaining<=0&&this.autoSubmitExam(),this.timeRemaining===300&&this.showTimeWarning()},1e3)}updateTimerDisplay(){const e=Math.floor(this.timeRemaining/3600),t=Math.floor(this.timeRemaining%3600/60),s=this.timeRemaining%60,i=document.getElementById("timer");if(i){const n=`${e.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}:${s.toString().padStart(2,"0")}`;i.textContent=n,this.timeRemaining<=300?i.className="font-mono text-lg font-bold text-red-600":this.timeRemaining<=900?i.className="font-mono text-lg font-bold text-yellow-600":i.className="font-mono text-lg font-bold text-green-600"}}showTimeWarning(){const e=document.createElement("div");e.className="fixed top-20 right-4 bg-yellow-50 border border-yellow-200 rounded-lg p-4 shadow-lg z-40 max-w-sm",e.innerHTML=`
            <div class="flex">
                <svg class="w-5 h-5 text-yellow-400 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16c-.77.833.192 2.5 1.732 2.5z"/>
                </svg>
                <div>
                    <h4 class="text-yellow-800 font-medium">Time Warning</h4>
                    <p class="text-yellow-700 text-sm mt-1">Only 5 minutes remaining! Please finish your exam soon.</p>
                </div>
            </div>
        `,document.body.appendChild(e),setTimeout(()=>{e.remove()},1e4)}startAutoSave(){this.autoSaveTimer=setInterval(()=>{this.autoSaveAnswers()},this.examConfig.autoSaveInterval)}bindEvents(){this.bindAnswerEvents(),document.getElementById("submitExamBtn")?.addEventListener("click",()=>{this.showSubmitConfirmation()}),document.getElementById("finalSubmit")?.addEventListener("click",()=>{this.showSubmitConfirmation()}),document.getElementById("confirmSubmit")?.addEventListener("click",()=>{this.submitExam()}),document.getElementById("cancelSubmit")?.addEventListener("click",()=>{this.hideSubmitConfirmation()}),document.querySelectorAll(".question-nav-btn").forEach(e=>{e.addEventListener("click",t=>{this.scrollToQuestion(parseInt(t.target.dataset.questionIndex))})}),document.getElementById("reviewAnswers")?.addEventListener("click",()=>{this.reviewAnswers()})}bindAnswerEvents(){document.querySelectorAll('input[type="radio"]').forEach(e=>{e.addEventListener("change",t=>{this.saveAnswer(t.target.dataset.questionId,t.target.value,"mcq")})}),document.querySelectorAll("textarea[data-question-id]").forEach(e=>{e.addEventListener("input",t=>{this.hasUnsavedChanges=!0,this.updateAutoSaveStatus("saving"),clearTimeout(this.saveTimeout),this.saveTimeout=setTimeout(()=>{this.saveAnswer(t.target.dataset.questionId,t.target.value,"short_answer")},1e3)})}),document.querySelectorAll('input[type="file"]').forEach(e=>{e.addEventListener("change",t=>{this.handleFileUpload(t)})})}saveAnswer(e,t,s){this.answers[e]={answer:t,type:s,timestamp:new Date().toISOString()},this.updateAnswerStatus(e,!0),this.updateQuestionNavigation(),this.hasUnsavedChanges=!0}async handleFileUpload(e){const t=e.target.files[0],s=e.target.dataset.questionId;if(!t)return;if(t.size>10*1024*1024){showError("File size must be less than 10MB"),e.target.value="";return}const n=e.target.closest(".question-card").querySelector(".uploaded-file"),a=n.querySelector(".file-name");a.textContent=t.name,n.classList.remove("hidden");const o=new FormData;o.append("file",t),o.append("question_id",s),o.append("_token",document.querySelector('meta[name="csrf-token"]').content);try{const r=await fetch(this.examConfig.routes.saveAnswer,{method:"POST",body:o});if(r.ok){const d=await r.json();this.saveAnswer(s,d.file_info,"file_upload")}else throw new Error("Upload failed")}catch(r){console.error("File upload error:",r),showError("Failed to upload file. Please try again."),n.classList.add("hidden"),e.target.value=""}n.querySelector(".remove-file")?.addEventListener("click",()=>{e.target.value="",n.classList.add("hidden"),delete this.answers[s],this.updateAnswerStatus(s,!1),this.updateQuestionNavigation()})}async autoSaveAnswers(){if(!(!this.hasUnsavedChanges||this.isSubmitting)){this.updateAutoSaveStatus("saving");try{(await fetch(this.examConfig.routes.saveAnswer,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content},body:JSON.stringify({answers:this.answers,attempt_id:this.examConfig.attemptId})})).ok&&(this.hasUnsavedChanges=!1,this.updateAutoSaveStatus("saved"))}catch(e){console.error("Auto-save error:",e),this.updateAutoSaveStatus("error")}}}updateAutoSaveStatus(e){const t=document.getElementById("autoSaveStatus"),s=t?.querySelector(".saving"),i=t?.querySelector(".saved"),n=t?.querySelector(".error");s?.classList.add("hidden"),i?.classList.add("hidden"),n?.classList.add("hidden"),e==="saving"?s?.classList.remove("hidden"):e==="saved"?i?.classList.remove("hidden"):e==="error"&&n?.classList.remove("hidden"),document.querySelectorAll(".question-card").forEach(a=>{const o=a.querySelector(".auto-save-indicator"),r=o?.querySelector(".saving"),d=o?.querySelector(".saved");e==="saving"?(r?.classList.remove("hidden"),d?.classList.add("hidden")):(r?.classList.add("hidden"),d?.classList.remove("hidden"))})}updateAnswerStatus(e,t){const s=document.querySelector(`[data-question-id="${e}"]`),i=s?.querySelector(".unanswered"),n=s?.querySelector(".answered");t?(i?.classList.add("hidden"),n?.classList.remove("hidden")):(i?.classList.remove("hidden"),n?.classList.add("hidden"))}updateQuestionNavigation(){const e=Object.keys(this.answers).length;document.querySelectorAll(".question-nav-btn").forEach(s=>{const i=s.dataset.questionId;this.answers[i]?(s.classList.remove("border-gray-300","bg-white"),s.classList.add("bg-green-100","border-green-300","text-green-800")):(s.classList.remove("bg-green-100","border-green-300","text-green-800"),s.classList.add("border-gray-300","bg-white"))});const t=document.querySelector(".answered-count");t&&(t.textContent=e)}scrollToQuestion(e){const t=document.querySelectorAll(".question-card");if(t[e]){t[e].scrollIntoView({behavior:"smooth",block:"start"}),document.querySelectorAll(".question-nav-btn").forEach(i=>{i.classList.remove("bg-blue-100","border-blue-300","text-blue-800")});const s=document.querySelector(`[data-question-index="${e}"]`);s&&!this.answers[s.dataset.questionId]&&s.classList.add("bg-blue-100","border-blue-300","text-blue-800")}}reviewAnswers(){window.scrollTo({top:0,behavior:"smooth"});const e=[];document.querySelectorAll(".question-card").forEach((t,s)=>{const i=t.dataset.questionId;this.answers[i]||(e.push(s+1),t.classList.add("ring-2","ring-yellow-300"),setTimeout(()=>{t.classList.remove("ring-2","ring-yellow-300")},3e3))}),e.length>0&&showInfo(`You have ${e.length} unanswered questions: ${e.join(", ")}`)}showSubmitConfirmation(){const e=document.getElementById("submitConfirmation");e&&(e.classList.remove("hidden"),this.updateQuestionNavigation())}hideSubmitConfirmation(){const e=document.getElementById("submitConfirmation");e&&e.classList.add("hidden")}async submitExam(){if(!this.isSubmitting){this.isSubmitting=!0,this.hideSubmitConfirmation(),clearInterval(this.timer),clearInterval(this.autoSaveTimer),this.showSubmissionOverlay();try{const e=await fetch(this.examConfig.routes.submit,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content},body:JSON.stringify({answers:this.answers,attempt_id:this.examConfig.attemptId,time_spent:this.examConfig.durationMinutes-this.timeRemaining})});if(e.ok){const t=await e.json();window.location.href=t.redirect_url}else throw new Error("Submission failed")}catch(e){console.error("Submission error:",e),showError("Failed to submit exam. Please try again."),this.isSubmitting=!1,this.hideSubmissionOverlay(),this.startTimer(),this.startAutoSave(),this.startServerSync()}}}async autoSubmitExam(){clearInterval(this.timer),clearInterval(this.autoSaveTimer),this.showSubmissionOverlay("Time is up! Auto-submitting your exam...");try{const e=await fetch(this.examConfig.routes.submit,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":document.querySelector('meta[name="csrf-token"]').content},body:JSON.stringify({answers:this.answers,attempt_id:this.examConfig.attemptId,time_spent:this.examConfig.durationMinutes,auto_submit:!0})});if(e.ok){const t=await e.json();window.location.href=t.redirect_url}}catch(e){console.error("Auto-submit error:",e)}}showSubmissionOverlay(e="Submitting your exam..."){const t=document.createElement("div");t.id="submissionOverlay",t.className="fixed inset-0 bg-black bg-opacity-75 z-50 flex items-center justify-center",t.innerHTML=`
            <div class="bg-white rounded-xl p-8 text-center max-w-md mx-4">
                <div class="animate-spin w-12 h-12 border-4 border-blue-500 border-t-transparent rounded-full mx-auto mb-4"></div>
                <h3 class="text-lg font-semibold text-gray-900 mb-2">${e}</h3>
                <p class="text-gray-600">Please wait while we process your submission...</p>
            </div>
        `,document.body.appendChild(t)}hideSubmissionOverlay(){const e=document.getElementById("submissionOverlay");e&&e.remove()}setupNavigationWarning(){window.addEventListener("beforeunload",n=>{if(this.hasUnsavedChanges&&!this.isSubmitting)return n.preventDefault(),n.returnValue="You have unsaved changes. Are you sure you want to leave?",n.returnValue});const e=document.getElementById("navigationWarning"),t=document.getElementById("stayOnPage"),s=document.getElementById("leavePage");let i=null;document.addEventListener("click",n=>{const a=n.target.closest("a");a&&a.href&&!a.href.includes("#")&&this.hasUnsavedChanges&&!this.isSubmitting&&(n.preventDefault(),i=a.href,e?.classList.remove("hidden"))}),t?.addEventListener("click",()=>{e?.classList.add("hidden"),i=null}),s?.addEventListener("click",()=>{i&&(window.location.href=i)})}loadExistingAnswers(){document.querySelectorAll('input[type="radio"]:checked').forEach(e=>{this.saveAnswer(e.dataset.questionId,e.value,"mcq")}),document.querySelectorAll("textarea[data-question-id]").forEach(e=>{e.value.trim()&&this.saveAnswer(e.dataset.questionId,e.value,"short_answer")}),document.querySelectorAll('input[type="file"][data-question-id]').forEach(e=>{e.files.length>0&&this.saveAnswer(e.dataset.questionId,"File uploaded","file_upload")}),this.updateQuestionNavigation(),Object.keys(this.answers).length>0&&this.updateAutoSaveStatus("saved")}}document.addEventListener("DOMContentLoaded",function(){window.examConfig&&new l});
